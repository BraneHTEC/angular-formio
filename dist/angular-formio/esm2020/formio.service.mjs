import { Observable } from 'rxjs';
import { Formio } from 'formiojs';
export class FormioService {
    constructor(url, options) {
        this.url = url;
        this.options = options;
        this.formio = new Formio(this.url, this.options);
    }
    requestWrapper(fn) {
        let record;
        let called = false;
        return Observable.create((observer) => {
            try {
                if (!called) {
                    called = true;
                    fn()
                        .then((_record) => {
                        record = _record;
                        observer.next(record);
                        observer.complete();
                    })
                        .catch((err) => observer.error(err));
                }
                else if (record) {
                    observer.next(record);
                    observer.complete();
                }
            }
            catch (err) {
                observer.error(err);
            }
        });
    }
    saveForm(form, options) {
        return this.requestWrapper(() => this.formio.saveForm(form, options));
    }
    loadForm(query, options) {
        return this.requestWrapper(() => this.formio.loadForm(query, options));
    }
    loadForms(query, options) {
        return this.requestWrapper(() => this.formio.loadForms(query, options));
    }
    loadSubmission(query, options) {
        return this.requestWrapper(() => this.formio.loadSubmission(query, options));
    }
    userPermissions(user, form, submission) {
        return this.requestWrapper(() => this.formio.userPermissions(user, form, submission));
    }
    deleteSubmission(data, options) {
        return this.requestWrapper(() => this.formio.deleteSubmission(data, options));
    }
    saveSubmission(submission, options) {
        return this.requestWrapper(() => this.formio.saveSubmission(submission, options));
    }
    loadSubmissions(query, options) {
        return this.requestWrapper(() => this.formio.loadSubmissions(query, options));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWlvLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyLWZvcm1pby9zcmMvZm9ybWlvLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBWSxNQUFNLE1BQU0sQ0FBQztBQUU1QyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRWxDLE1BQU0sT0FBTyxhQUFhO0lBRXhCLFlBQW1CLEdBQVcsRUFBUyxPQUFnQjtRQUFwQyxRQUFHLEdBQUgsR0FBRyxDQUFRO1FBQVMsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNyRCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELENBQUM7SUFDRCxjQUFjLENBQUMsRUFBTztRQUNwQixJQUFJLE1BQVcsQ0FBQztRQUNoQixJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDbkIsT0FBTyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsUUFBdUIsRUFBRSxFQUFFO1lBQ25ELElBQUk7Z0JBQ0YsSUFBSSxDQUFDLE1BQU0sRUFBRTtvQkFDWCxNQUFNLEdBQUcsSUFBSSxDQUFDO29CQUNkLEVBQUUsRUFBRTt5QkFDRCxJQUFJLENBQUMsQ0FBQyxPQUFZLEVBQUUsRUFBRTt3QkFDckIsTUFBTSxHQUFHLE9BQU8sQ0FBQzt3QkFDakIsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQzt3QkFDdEIsUUFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO29CQUN0QixDQUFDLENBQUM7eUJBQ0QsS0FBSyxDQUFDLENBQUMsR0FBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7aUJBQzdDO3FCQUFNLElBQUksTUFBTSxFQUFFO29CQUNqQixRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO29CQUN0QixRQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7aUJBQ3JCO2FBQ0Y7WUFBQyxPQUFPLEdBQUcsRUFBRTtnQkFDWixRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO2FBQ3JCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBQ0QsUUFBUSxDQUFDLElBQWdCLEVBQUUsT0FBYTtRQUN0QyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDeEUsQ0FBQztJQUNELFFBQVEsQ0FBQyxLQUFXLEVBQUUsT0FBYTtRQUNqQyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUNELFNBQVMsQ0FBQyxLQUFVLEVBQUUsT0FBYTtRQUNqQyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUNELGNBQWMsQ0FBQyxLQUFXLEVBQUUsT0FBYTtRQUN2QyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDL0UsQ0FBQztJQUNELGVBQWUsQ0FBQyxJQUFTLEVBQUUsSUFBUyxFQUFFLFVBQWU7UUFDbkQsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQztJQUN4RixDQUFDO0lBQ0QsZ0JBQWdCLENBQUMsSUFBVSxFQUFFLE9BQWE7UUFDeEMsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDaEYsQ0FBQztJQUNELGNBQWMsQ0FBQyxVQUFjLEVBQUUsT0FBYTtRQUMxQyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsVUFBVSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDcEYsQ0FBQztJQUNELGVBQWUsQ0FBQyxLQUFXLEVBQUUsT0FBYTtRQUN4QyxPQUFPLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDaEYsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSwgT2JzZXJ2ZXIgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgRm9ybWlvRm9ybSB9IGZyb20gJy4vZm9ybWlvLmNvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1pbyB9IGZyb20gJ2Zvcm1pb2pzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBGb3JtaW9TZXJ2aWNlIHtcclxuICBwdWJsaWMgZm9ybWlvOiBhbnk7XHJcbiAgY29uc3RydWN0b3IocHVibGljIHVybDogc3RyaW5nLCBwdWJsaWMgb3B0aW9ucz86IG9iamVjdCkge1xyXG4gICAgdGhpcy5mb3JtaW8gPSBuZXcgRm9ybWlvKHRoaXMudXJsLCB0aGlzLm9wdGlvbnMpO1xyXG4gIH1cclxuICByZXF1ZXN0V3JhcHBlcihmbjogYW55KSB7XHJcbiAgICBsZXQgcmVjb3JkOiBhbnk7XHJcbiAgICBsZXQgY2FsbGVkID0gZmFsc2U7XHJcbiAgICByZXR1cm4gT2JzZXJ2YWJsZS5jcmVhdGUoKG9ic2VydmVyOiBPYnNlcnZlcjxhbnk+KSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgaWYgKCFjYWxsZWQpIHtcclxuICAgICAgICAgIGNhbGxlZCA9IHRydWU7XHJcbiAgICAgICAgICBmbigpXHJcbiAgICAgICAgICAgIC50aGVuKChfcmVjb3JkOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICByZWNvcmQgPSBfcmVjb3JkO1xyXG4gICAgICAgICAgICAgIG9ic2VydmVyLm5leHQocmVjb3JkKTtcclxuICAgICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSgpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycjogYW55KSA9PiBvYnNlcnZlci5lcnJvcihlcnIpKTtcclxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZCkge1xyXG4gICAgICAgICAgb2JzZXJ2ZXIubmV4dChyZWNvcmQpO1xyXG4gICAgICAgICAgb2JzZXJ2ZXIuY29tcGxldGUoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIG9ic2VydmVyLmVycm9yKGVycik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuICBzYXZlRm9ybShmb3JtOiBGb3JtaW9Gb3JtLCBvcHRpb25zPzogYW55KTogT2JzZXJ2YWJsZTxGb3JtaW9Gb3JtPiB7XHJcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V3JhcHBlcigoKSA9PiB0aGlzLmZvcm1pby5zYXZlRm9ybShmb3JtLCBvcHRpb25zKSk7XHJcbiAgfVxyXG4gIGxvYWRGb3JtKHF1ZXJ5PzogYW55LCBvcHRpb25zPzogYW55KTogT2JzZXJ2YWJsZTxGb3JtaW9Gb3JtPiB7XHJcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V3JhcHBlcigoKSA9PiB0aGlzLmZvcm1pby5sb2FkRm9ybShxdWVyeSwgb3B0aW9ucykpO1xyXG4gIH1cclxuICBsb2FkRm9ybXMocXVlcnk6IGFueSwgb3B0aW9ucz86IGFueSk6IE9ic2VydmFibGU8Rm9ybWlvRm9ybT4ge1xyXG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdFdyYXBwZXIoKCkgPT4gdGhpcy5mb3JtaW8ubG9hZEZvcm1zKHF1ZXJ5LCBvcHRpb25zKSk7XHJcbiAgfVxyXG4gIGxvYWRTdWJtaXNzaW9uKHF1ZXJ5PzogYW55LCBvcHRpb25zPzogYW55KTogT2JzZXJ2YWJsZTx7fT4ge1xyXG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdFdyYXBwZXIoKCkgPT4gdGhpcy5mb3JtaW8ubG9hZFN1Ym1pc3Npb24ocXVlcnksIG9wdGlvbnMpKTtcclxuICB9XHJcbiAgdXNlclBlcm1pc3Npb25zKHVzZXI6IGFueSwgZm9ybTogYW55LCBzdWJtaXNzaW9uOiBhbnkpOiBPYnNlcnZhYmxlPHt9PiB7XHJcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V3JhcHBlcigoKSA9PiB0aGlzLmZvcm1pby51c2VyUGVybWlzc2lvbnModXNlciwgZm9ybSwgc3VibWlzc2lvbikpO1xyXG4gIH1cclxuICBkZWxldGVTdWJtaXNzaW9uKGRhdGE/OiBhbnksIG9wdGlvbnM/OiBhbnkpOiBPYnNlcnZhYmxlPHt9PiB7XHJcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V3JhcHBlcigoKSA9PiB0aGlzLmZvcm1pby5kZWxldGVTdWJtaXNzaW9uKGRhdGEsIG9wdGlvbnMpKTtcclxuICB9XHJcbiAgc2F2ZVN1Ym1pc3Npb24oc3VibWlzc2lvbjoge30sIG9wdGlvbnM/OiBhbnkpOiBPYnNlcnZhYmxlPHt9PiB7XHJcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V3JhcHBlcigoKSA9PiB0aGlzLmZvcm1pby5zYXZlU3VibWlzc2lvbihzdWJtaXNzaW9uLCBvcHRpb25zKSk7XHJcbiAgfVxyXG4gIGxvYWRTdWJtaXNzaW9ucyhxdWVyeT86IGFueSwgb3B0aW9ucz86IGFueSk6IE9ic2VydmFibGU8e30+IHtcclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3RXcmFwcGVyKCgpID0+IHRoaXMuZm9ybWlvLmxvYWRTdWJtaXNzaW9ucyhxdWVyeSwgb3B0aW9ucykpO1xyXG4gIH1cclxufVxyXG4iXX0=